set_cpf_version 2.0

#define the library sets

define_library_set -name libset25C -libraries {/project/chriskim07/PDKs/TSMC28nm/sclib/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn28hpcplusbwp30p140_180a/tcbn28hpcplusbwp30p140tt0p9v25c.lib /project/chriskim07/PDKs/TSMC28nm/sclib/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn28hpcplusbwp30p140_180a/tcbn28hpcplusbwp30p140tt0p9v0p9v25c.lib /project/chriskim07/PDKs/TSMC28nm/sclib/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn28hpcplusbwp30p140_180a/tcbn28hpcplusbwp30p140tt1v0p9v25c.lib /project/chriskim07/PDKs/TSMC28nm/sclib/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn28hpcplusbwp30p140_180a/tcbn28hpcplusbwp30p140tt0p9v1v25c.lib /project/chriskim01/chipfab/rare23/SRAM/ts1n28hpcpsvtb1024x32m4sw_180a/NLDM/ts1n28hpcpsvtb1024x32m4sw_180a_tt0p9v25c.lib /project/chriskim01/chipfab/rare23/SRAM/ts1n28hpcpsvtb2048x32m8sw_180a/NLDM/ts1n28hpcpsvtb2048x32m8sw_180a_tt0p9v25c.lib /project/chriskim01/chipfab/rare23/SRAM/ts1n28hpcpsvtb2048x32m4sw_180a/NLDM/ts1n28hpcpsvtb2048x32m4sw_180a_tt0p9v25c.lib}

define_library_set -name libset1V -libraries {/project/chriskim07/PDKs/TSMC28nm/sclib/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn28hpcplusbwp30p140_180a/tcbn28hpcplusbwp30p140tt1v25c.lib /project/chriskim07/PDKs/TSMC28nm/sclib/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn28hpcplusbwp30p140_180a/tcbn28hpcplusbwp30p140tt1v0p9v25c.lib /project/chriskim07/PDKs/TSMC28nm/sclib/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn28hpcplusbwp30p140_180a/tcbn28hpcplusbwp30p140tt0p8v1v25c.lib /project/chriskim01/chipfab/rare23/SRAM/ts1n28hpcpsvtb1024x32m4sw_180a/NLDM/ts1n28hpcpsvtb1024x32m4sw_180a_tt1v25c.lib /project/chriskim01/chipfab/rare23/SRAM/ts1n28hpcpsvtb2048x32m8sw_180a/NLDM/ts1n28hpcpsvtb2048x32m8sw_180a_tt1v25c.lib /project/chriskim01/chipfab/rare23/SRAM/ts1n28hpcpsvtb2048x32m4sw_180a/NLDM/ts1n28hpcpsvtb2048x32m4sw_180a_tt1v25c.lib}

#design part of the cpf
set_design rare_riscv_test_w_mem

# High to low placed at PD_DUT (Actually place low to high lvlshifter)
define_level_shifter_cell -cells LVLLHD*\
    -input_voltage_range 0.9:1 \
    -output_voltage_range 0.9:1 \
    -input_power_pin VDDL \
    -output_power_pin VDD \
    -ground VSS \
    -direction bidir\
    -valid_location to





# Low to high placed at PD_TOP
define_level_shifter_cell -cells LVLLHD*\
    -input_voltage_range 0.9:1 \
    -output_voltage_range 0.9:1 \
    -input_power_pin VDDL \
    -output_power_pin VDD \
    -ground VSS \
    -direction bidir\
    -valid_location to

#create power domains
create_power_domain -name PD_TOP -default
create_power_domain -name PD_DUT -instances rare_riscv_test_inst*

#create nominal conditions
create_nominal_condition -name nom -voltage 0.9
create_nominal_condition -name high -voltage 1

#create power mode
create_power_mode -name PM1 -domain_conditions {PD_TOP@nom PD_DUT@nom} -default
create_power_mode -name PM2 -domain_conditions {PD_TOP@high PD_DUT@nom}
create_power_mode -name PM3 -domain_conditions {PD_TOP@nom PD_DUT@high}

#associate library sets with nominal conditions
update_nominal_condition -name nom -library_set libset25C
update_nominal_condition -name high -library_set libset1V
#update_nominal_condition -name m40c -library_set libsetm40C

# create rules for level shifters
create_level_shifter_rule -name lsr1 \
    -from PD_TOP -to PD_DUT \

create_level_shifter_rule -name lsr2 \
    -from PD_DUT -to PD_TOP

create_level_shifter_rule -name lsr3 \
    -force -pins *rare_riscv_test_inst/cv32e40p_top_inst/rst_ni*

update_level_shifter_rules -names lsr1 -location to
update_level_shifter_rules -names lsr2 -location to
update_level_shifter_rules -names lsr3 -location parent

set_power_target -leakage 30 -dynamic 250

#create rules for level shifter instertion

#specify timing conditions
update_power_mode -name PM1 -sdc_files run_rare_riscv_test_w_mem.sdc
update_power_mode -name PM2 -sdc_files run_rare_riscv_test_w_mem.sdc
update_power_mode -name PM3 -sdc_files run_rare_riscv_test_w_mem.sdc

#additional information for physical implementation
#declare power and ground nets
create_ground_nets -nets VSS -voltage 0
create_power_nets -nets VDD -voltage 0.90:1
create_power_nets -nets VDD_DUT -voltage 0.9

#create global connections
create_global_connection -net VSS -pins VSS
create_global_connection -domain PD_TOP -net VDD -pins VDD
create_global_connection -domain PD_TOP -net VDD_DUT -pins VDDL

create_global_connection -domain PD_DUT -net VDD_DUT -pins VDD
create_global_connection -domain PD_DUT -net VDD -pins VDDL

#add implementation info for power domains
update_power_domain -name PD_TOP -primary_power_net VDD -primary_ground_net VSS
update_power_domain -name PD_DUT -primary_power_net VDD_DUT -primary_ground_net VSS 

#create operating corners
create_operating_corner -name BC_RT -process 28 -temperature 25 -voltage 0.9 -library_set libset25C
create_operating_corner -name BC_HV -process 28 -temperature 25 -voltage 1 -library_set libset1V

#create analysis views
create_analysis_view -name AV_PM1 -mode PM1 -domain_corners {PD_TOP@BC_RT PD_DUT@BC_RT}
create_analysis_view -name AV_PM2 -mode PM2 -domain_corners {PD_TOP@BC_HV PD_DUT@BC_RT}
create_analysis_view -name AV_PM3 -mode PM3 -domain_corners {PD_TOP@BC_RT PD_DUT@BC_HV}
end_design
